// static/script.js

// ============== TRANSLATION SETUP ==============
let currentLanguage = 'en';

// --- Comprehensive translation object using CORRECTED short keys ---
const translations = {
    en: {
        // Static UI Text
        headerTitle: "ЁЯзСтАНЁЯМ╛ Agri-AI Diagnostics",
        headerLead: "Upload a crop or insect image for a complete analysis.",
        translateButton: "Translate",
        step1Title: "Step 1: Upload Image",
        uploadLabel: "ЁЯМ┐ Upload Image (Crop or Insect)",
        analyzeButton: "Analyze Image",
        loadingSpinner: "Loading...",
        step2Title: "Step 2: Answer a Few Questions",
        step2Lead: "Please provide additional information based on the image below and your observations.",
        getDiagnosisButton: "Get Final Diagnosis",
        resultsTitle: "Final Analysis",
        resetButton: "Analyze Another Crop",
        diseaseSectionTitle: "Dead-Heart Symptoms",
        insectSectionTitle: "Larva Symptoms",
        yes: "Yes",
        no: "No",
        diseaseAnalysisTitle: "ЁЯМ┐ Disease Analysis (Dead Heart)",
        insectAnalysisTitle: "ЁЯРЫ Insect Analysis",
        finalDiagnosisLabel: "Final Diagnosis:",
        visualDetectionLabel: "Visual Detection (Image):",
        symptomAnalysisLabel: "Symptom Analysis (TabNet):",
        fusedCertaintyLabel: "Fused Certainty:",
        recommendationTitle: "ЁЯТб Recommendation", // Added for enhancement
        // Dynamic Questions using the short keys from model_handler.py
        dynamic_questions: {
            "dh_q1": "Have you seen the central growing point of the stalk damaged or dead?",
            "dh_q2": "Is the dead central shoot straw-coloured?",
            "dh_q3": "After pulling the dead-heart, do you find maggots that look like secondary feeders (not primary borers)?",
            "dh_q4": "After pulling the dead-heart, do you find fresh live larvae inside the affected stem?",
            "dh_q5": "Is most of the visible damage inside the stem rather than outside?",
            "dh_q6": "Have you noticed insect attack when the leaves are still developing and soft?",
            "dh_q7": "Was the crop planted within the last 15 days?",
            "dh_q8": "Have you never seen moths flying during daytime?",
            "dh_q9": "Have you observed mating or egg-laying activity mostly at night?",
            "dh_q10": "Were any biological control insects released in the field?",
            "dh_q11": "Have you seen fully grown moths that are straw to light brown in colour?",
            "dh_q12": "Is the central shoot of young plants dry, brown, or straw-colored?",
            "dh_q13": "Does the central shoot come out easily when pulled gently?",
            "dh_q14": "Does the pulled shoot emit a foul or rotten odor?",
            "dh_q15": "Are leaves around the central shoot yellowing, wilting, or drying?",
            "dh_q16": "Do patches of plants show multiple stalks with dried or dead centers?",
            "dh_q17": "Has the percentage of dead hearts increased after recent rains or waterlogging?",
            "dh_q18": "Are affected plants stunted or shorter than surrounding healthy plants?",
            "dh_q19": "Do affected plants fail to produce new green shoots or leaves?",
            "dh_q20": "Are there soft, hollow, or tunnel-like areas inside the affected stalks?",
            "dh_q21": "Have you seen bunchy or abnormal growth at the top of affected stalks?",
            "dh_q22": "Are soil moisture and drainage poor in areas where dead hearts appear?",
            "dh_q23": "Are there no dry central shoots in the field?",
            "dh_q24": "Is plant height uniform and normal throughout the field?",
            "dh_q25": "When pulling the central shoot, is it firmly attached without coming out easily?",
            "dh_q26": "Does the shoot base smell fresh with no rotting or foul odor?",
            "dh_q27": "Are leaves healthy, green, and not wilting near the central shoot?",
            "dh_q28": "Do you have no patches with multiple dead or dried shoots?",
            "dh_q29": "Have symptoms decreased after improved irrigation or fertilization?",
            "dh_q30": "Is there no recurrence of dead heart symptoms from previous seasons?",
            "in_q1": "Is the crop тЙд 120 days old (i.e., within first 4 months)?",
            "in_q2": "Did the damage start after 4 months from planting?",
            "in_q3": "Did you first notice the damage between March and June?",
            "in_q4": "Did you first notice the damage between June and December?",
            "in_q5": "Did attacks start very soon after planting (within about 15 days)?",
            "in_q6": "Did the damage stop appearing after 4 months from planting?",
            "in_q7": "Is the peak damage appearing around 7тАУ9 months after planting?",
            "in_q8": "Does the damage seem to start from the lower part of the stalk?",
            "in_q9": "Does the damage seem to start from the upper part of the stalk?",
            "in_q10": "Are bore holes within 15 cm from the soil?",
            "in_q11": "Are bore holes on the upper internodes?",
            "in_q12": "Are some stalk internodes malformed or constricted?",
            "in_q13": "Do you see small aerial roots appearing on the stalks above the ground?",
            "in_q14": "When you pull the dead central shoot, does it come out easily?",
            "in_q15": "Does the pulled shoot have a foul or bad smell?",
            "in_q16": "Is the pulled shoot difficult to remove?",
            "in_q17": "When removed, is there no bad smell from the shoot?",
            "in_q18": "Are insect eggs present on the underside of the lower leaves?",
            "in_q19": "Are insect eggs present on the underside of the top leaves?",
            "in_q20": "Are the eggs flat, white, and smaller than 1 mm?",
            "in_q21": "Does the larva have 5 visible stripes along its body?",
            "in_q22": "Does the larva have only 4 visible stripes along its body?",
            "in_q23": "Is fresh powder-like excreta seen near the base of the stalk?",
            "in_q24": "Is fresh excreta seen on the upper internodes?",
            "in_q25": "In the early stages, do you see only green leaf scraping without bore holes?",
            "in_q26": "Has the damage occurred only after internodes have fully developed?",
            "in_q27": "Along with dead shoots, do you see bunchy or abnormal top growth?",
            "in_q28": "Did you apply a high dose of nitrogen/urea before the damage started?",
            "in_q29": "Was trash mulching done early in the crop stage?",
            "in_q30": "Was earthing-up done to cover the lower stalk area?"
        }
    },
    ta: {
        // Static UI Text
        headerTitle: "ЁЯзСтАНЁЯМ╛ роЕроХрпНро░ро┐-AI роХрогрпНроЯро▒ро┐родро▓рпН",
        headerLead: "роорпБро┤рпБроорпИропро╛рой рокроХрпБрокрпНрокро╛ропрпНро╡ро┐ро▒рпНроХрпБ рокропро┐ро░рпН роЕро▓рпНро▓родрпБ рокрпВроЪрпНроЪро┐ рокроЯродрпНродрпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН.",
        translateButton: "роорпКро┤ро┐рокрпЖропро░рпН",
        step1Title: "рокроЯро┐ 1: рокроЯродрпНродрпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН",
        uploadLabel: "ЁЯМ┐ рокроЯродрпНродрпИ рокродро┐ро╡рпЗро▒рпНро▒ро╡рпБроорпН (рокропро┐ро░рпН роЕро▓рпНро▓родрпБ рокрпВроЪрпНроЪро┐)",
        analyzeButton: "рокроЯродрпНродрпИ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ роЪрпЖропрпНропро╡рпБроорпН",
        loadingSpinner: "роПро▒рпНро▒рпБроХро┐ро▒родрпБ...",
        step2Title: "рокроЯро┐ 2: роЪро┐ро▓ роХрпЗро│рпНро╡ро┐роХро│рпБроХрпНроХрпБ рокродро┐ро▓ро│ро┐роХрпНроХро╡рпБроорпН",
        step2Lead: "роХрпАро┤рпЗропрпБро│рпНро│ рокроЯроорпН рооро▒рпНро▒рпБроорпН роЙроЩрпНроХро│рпН роЕро╡родро╛ройро┐рокрпНрокрпБроХро│ро┐ройрпН роЕроЯро┐рокрпНрокроЯрпИропро┐ро▓рпН роХрпВроЯрпБродро▓рпН родроХро╡ро▓рпНроХро│рпИ ро╡ро┤роЩрпНроХро╡рпБроорпН.",
        getDiagnosisButton: "роЗро▒рпБродро┐ роирпЛропрпН роХрогрпНроЯро▒ро┐родро▓рпИрокрпН рокрпЖро▒рпБроХ",
        resultsTitle: "роЗро▒рпБродро┐ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ",
        resetButton: "рооро▒рпНро▒рпКро░рпБ рокропро┐ро░рпИ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ роЪрпЖропрпНропро╡рпБроорпН",
        diseaseSectionTitle: "роЗро▒роирпНрод роЗродроп роЕро▒ро┐роХрпБро▒ро┐роХро│рпН",
        insectSectionTitle: "ро▓ро╛ро░рпНро╡ро╛ роЕро▒ро┐роХрпБро▒ро┐роХро│рпН",
        yes: "роЖроорпН",
        no: "роЗро▓рпНро▓рпИ",
        diseaseAnalysisTitle: "ЁЯМ┐ роирпЛропрпН рокроХрпБрокрпНрокро╛ропрпНро╡рпБ ( роЗро▒роирпНрод роЗродропроорпН)",
        insectAnalysisTitle: "ЁЯРЫ рокрпВроЪрпНроЪро┐ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ",
        finalDiagnosisLabel: "роЗро▒рпБродро┐ роирпЛропрпН роХрогрпНроЯро▒ро┐родро▓рпН:",
        visualDetectionLabel: "роХро╛роЯрпНроЪро┐ роХрогрпНроЯро▒ро┐родро▓рпН (рокроЯроорпН):",
        symptomAnalysisLabel: "роЕро▒ро┐роХрпБро▒ро┐ рокроХрпБрокрпНрокро╛ропрпНро╡рпБ (роЯро╛рокрпНроирпЖроЯрпН):",
        fusedCertaintyLabel: "роЗрогрпИроирпНрод роЙро▒рпБродро┐:",
        recommendationTitle: "ЁЯТб рокро░ро┐роирпНродрпБро░рпИ",
        // Dynamic Questions (Translated to Tamil)
        dynamic_questions: {
            "dh_q1": "родрогрпНроЯро┐ройрпН роорпИроп ро╡ро│ро░рпНроЪрпНроЪро┐рокрпН рокрпБро│рпНро│ро┐ роЪрпЗродроороЯрпИроирпНродродрпИропрпЛ роЕро▓рпНро▓родрпБ роЗро▒роирпНродродрпИропрпЛ рокро╛ро░рпНродрпНродро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "dh_q2": "роЗро▒роирпНрод роорпИропродрпН родрогрпНроЯрпБ ро╡рпИроХрпНроХрпЛро▓рпН роиро┐ро▒родрпНродро┐ро▓рпН роЙро│рпНро│родро╛?",
            "dh_q3": "роЗро▒роирпНрод роЗродропродрпНродрпИ роЗро┤рпБродрпНрод рокро┐ро▒роХрпБ, роЗро░рогрпНроЯро╛роорпН роиро┐ро▓рпИ роЙрогрпНрогро┐роХро│ро╛роХродрпН родрпЛро▒рпНро▒рооро│ро┐роХрпНроХрпБроорпН рокрпБро┤рпБроХрпНроХро│рпИ (роорпБродройрпНроорпИ родрпБро│рпИрокрпНрокро╛ройрпНроХро│рпН роЕро▓рпНро▓) роХро╛рогрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "dh_q4": "роЗро▒роирпНрод роЗродропродрпНродрпИ роЗро┤рпБродрпНрод рокро┐ро▒роХрпБ, рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ родрогрпНроЯрпБроХрпНроХрпБро│рпН рокрпБродро┐роп роЙропро┐ро░рпБро│рпНро│ рокрпБро┤рпБроХрпНроХро│рпИроХрпН роХро╛рогрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "dh_q5": "ро╡рпЖро│ро┐рокрпНрокроХрпНроХродрпНродрпИ ро╡ро┐роЯ родрогрпНроЯрпБроХрпНроХрпБро│рпН родро╛ройрпН роЕродро┐роХ роЪрпЗродроорпН родрпЖро░ро┐роХро┐ро▒родро╛?",
            "dh_q6": "роЗро▓рпИроХро│рпН роЗройрпНройрпБроорпН ро╡ро│ро░рпНроирпНродрпБ роорпЖройрпНроорпИропро╛роХ роЗро░рпБроХрпНроХрпБроорпНрокрпЛродрпБ рокрпВроЪрпНроЪро┐ родро╛роХрпНроХрпБродро▓рпИроХрпН роХро╡ройро┐родрпНродро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "dh_q7": "роХроЯроирпНрод 15 роиро╛роЯрпНроХро│рпБроХрпНроХрпБро│рпН рокропро┐ро░рпН роироЯрокрпНрокроЯрпНроЯродро╛?",
            "dh_q8": "рокроХро▓рпН роирпЗро░родрпНродро┐ро▓рпН роЕроирпНродрпБрокрпНрокрпВроЪрпНроЪро┐роХро│рпН рокро▒рокрпНрокродрпИ роирпАроЩрпНроХро│рпН рокро╛ро░рпНродрпНродродрпЗ роЗро▓рпНро▓рпИропро╛?",
            "dh_q9": "рокрпЖро░рпБроорпНрокро╛ро▓рпБроорпН роЗро░ро╡ро┐ро▓рпН роЗройроЪрпНроЪрпЗро░рпНроХрпНроХрпИ роЕро▓рпНро▓родрпБ роорпБроЯрпНроЯрпИропро┐роЯрпБроорпН роЪрпЖропро▓рпИроХрпН роХро╡ройро┐родрпНродро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "dh_q10": "ро╡ропро▓ро┐ро▓рпН роПродрпЗройрпБроорпН роЙропро┐ро░ро┐ропро▓рпН роХроЯрпНроЯрпБрокрпНрокро╛роЯрпНроЯрпБ рокрпВроЪрпНроЪро┐роХро│рпН ро╡ро┐роЯрокрпНрокроЯрпНроЯродро╛?",
            "dh_q11": "ро╡рпИроХрпНроХрпЛро▓рпН роорпБродро▓рпН ро╡рпЖро│ро┐ро░рпН рокро┤рпБрокрпНрокрпБ роиро┐ро▒родрпНродро┐ро▓рпН роорпБро┤рпБроорпИропро╛роХ ро╡ро│ро░рпНроирпНрод роЕроирпНродрпБрокрпНрокрпВроЪрпНроЪро┐роХро│рпИрокрпН рокро╛ро░рпНродрпНродро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "dh_q12": "роЗро│роорпН родро╛ро╡ро░роЩрпНроХро│ро┐ройрпН роорпИропродрпН родрогрпНроЯрпБ роХро╛ропрпНроирпНрод, рокро┤рпБрокрпНрокрпБ роЕро▓рпНро▓родрпБ ро╡рпИроХрпНроХрпЛро▓рпН роиро┐ро▒родрпНродро┐ро▓рпН роЙро│рпНро│родро╛?",
            "dh_q13": "роорпЖродрпБро╡ро╛роХ роЗро┤рпБроХрпНроХрпБроорпНрокрпЛродрпБ роорпИропродрпН родрогрпНроЯрпБ роОро│ро┐родро┐ро▓рпН ро╡рпЖро│ро┐ропрпЗ ро╡ро░рпБроХро┐ро▒родро╛?",
            "dh_q14": "роЗро┤рпБроХрпНроХрокрпНрокроЯрпНроЯ родрогрпНроЯрпБ родрпБро░рпНроиро╛ро▒рпНро▒роорпН роЕро▓рпНро▓родрпБ роЕро┤рпБроХро┐роп ро╡ро╛роЪройрпИропрпИ ро╡рпЖро│ро┐ропро┐роЯрпБроХро┐ро▒родро╛?",
            "dh_q15": "роорпИропродрпН родрогрпНроЯрпИроЪрпН роЪрпБро▒рпНро▒ро┐ропрпБро│рпНро│ роЗро▓рпИроХро│рпН роороЮрпНроЪро│рпН, ро╡ро╛роЯро▓рпН роЕро▓рпНро▓родрпБ роХро╛ропрпНроирпНродрпБ рокрпЛроХро┐ройрпНро▒ройро╡ро╛?",
            "dh_q16": "родро╛ро╡ро░роЩрпНроХро│ро┐ройрпН родро┐роЯрпНроЯрпБроХро│ро┐ро▓рпН роХро╛ропрпНроирпНрод роЕро▓рпНро▓родрпБ роЗро▒роирпНрод роорпИропроЩрпНроХро│рпИроХрпН роХрпКрогрпНроЯ рокро▓ родрогрпНроЯрпБроХро│рпН родрпЖройрпНрокроЯрпБроХро┐ройрпНро▒ройро╡ро╛?",
            "dh_q17": "роЪроорпАрокродрпНродро┐роп рооро┤рпИ роЕро▓рпНро▓родрпБ роирпАро░рпН родрпЗроХрпНроХродрпНродро┐ро▒рпНроХрпБрокрпН рокро┐ро▒роХрпБ роЗро▒роирпНрод роЗродропроЩрпНроХро│ро┐ройрпН роЪродро╡рпАродроорпН роЕродро┐роХро░ро┐родрпНродрпБро│рпНро│родро╛?",
            "dh_q18": "рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ родро╛ро╡ро░роЩрпНроХро│рпН роЪрпБро▒рпНро▒ро┐ропрпБро│рпНро│ роЖро░рпЛроХрпНроХро┐ропрооро╛рой родро╛ро╡ро░роЩрпНроХро│рпИ ро╡ро┐роЯ роХрпБроЯрпНроЯрпИропро╛роХро╡рпЛ роЕро▓рпНро▓родрпБ ро╡ро│ро░рпНроЪрпНроЪро┐роХрпН роХрпБройрпНро▒ро┐ропрпЛ роЙро│рпНро│родро╛?",
            "dh_q19": "рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ родро╛ро╡ро░роЩрпНроХро│рпН рокрпБродро┐роп рокроЪрпНроЪрпИ родро│ро┐ро░рпНроХро│рпН роЕро▓рпНро▓родрпБ роЗро▓рпИроХро│рпИ роЙро░рпБро╡ро╛роХрпНроХродрпН родро╡ро▒рпБроХро┐ройрпНро▒ройро╡ро╛?",
            "dh_q20": "рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ родрогрпНроЯрпБроХро│рпБроХрпНроХрпБро│рпН роорпЖройрпНроорпИропро╛рой, роЙро│рпНро│рпАроЯро▒рпНро▒ роЕро▓рпНро▓родрпБ роЪрпБро░роЩрпНроХроорпН рокрпЛройрпНро▒ рокроХрпБродро┐роХро│рпН роЙро│рпНро│родро╛?",
            "dh_q21": "рокро╛родро┐роХрпНроХрокрпНрокроЯрпНроЯ родрогрпНроЯрпБроХро│ро┐ройрпН роЙроЪрпНроЪро┐ропро┐ро▓рпН роХрпКродрпНродро╛рой роЕро▓рпНро▓родрпБ роЕроЪро╛родро╛ро░рог ро╡ро│ро░рпНроЪрпНроЪро┐ропрпИроХрпН роХрогрпНроЯро┐ро░рпБроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "dh_q22": "роЗро▒роирпНрод роЗродропроЩрпНроХро│рпН родрпЛройрпНро▒рпБроорпН рокроХрпБродро┐роХро│ро┐ро▓рпН роорогрпН роИро░роорпН рооро▒рпНро▒рпБроорпН ро╡роЯро┐роХро╛ро▓рпН роорпЛроЪрооро╛роХ роЙро│рпНро│родро╛?",
            "dh_q23": "ро╡ропро▓ро┐ро▓рпН роХро╛ропрпНроирпНрод роорпИропродрпН родрогрпНроЯрпБроХро│рпН роОродрпБро╡рпБроорпН роЗро▓рпНро▓рпИропро╛?",
            "dh_q24": "ро╡ропро▓рпН роорпБро┤рпБро╡родрпБроорпН родро╛ро╡ро░родрпНродро┐ройрпН роЙропро░роорпН роЪрпАро░ро╛роХро╡рпБроорпН роЪро╛родро╛ро░рогрооро╛роХро╡рпБроорпН роЙро│рпНро│родро╛?",
            "dh_q25": "роорпИропродрпН родрогрпНроЯрпИ роЗро┤рпБроХрпНроХрпБроорпНрокрпЛродрпБ, роЕродрпБ роОро│ро┐родро┐ро▓рпН ро╡рпЖро│ро┐ропрпЗ ро╡ро░ро╛рооро▓рпН роЙро▒рпБродро┐ропро╛роХ роЗрогрпИроХрпНроХрокрпНрокроЯрпНроЯрпБро│рпНро│родро╛?",
            "dh_q26": "родрогрпНроЯро┐ройрпН роЕроЯро┐рокрпНрокроХрпБродро┐ роЕро┤рпБроХро▓рпН роЕро▓рпНро▓родрпБ родрпБро░рпНроиро╛ро▒рпНро▒роорпН роЗро▓рпНро▓ро╛рооро▓рпН р░др░╛р░Ьр░╛р░Чр░╛ роорогроХрпНроХро┐ро▒родро╛?",
            "dh_q27": "роорпИропродрпН родрогрпНроЯрпБроХрпНроХрпБ роЕро░рпБроХро┐ро▓рпН роЙро│рпНро│ роЗро▓рпИроХро│рпН роЖро░рпЛроХрпНроХро┐ропрооро╛роХро╡рпБроорпН, рокроЪрпНроЪрпИропро╛роХро╡рпБроорпН, ро╡ро╛роЯро╛рооро▓рпБроорпН роЙро│рпНро│родро╛?",
            "dh_q28": "рокро▓ роЗро▒роирпНрод роЕро▓рпНро▓родрпБ роХро╛ропрпНроирпНрод родро│ро┐ро░рпНроХро│рпН роХрпКрогрпНроЯ родро┐роЯрпНроЯрпБроХро│рпН роЙроЩрпНроХро│ро┐роЯроорпН роЗро▓рпНро▓рпИропро╛?",
            "dh_q29": "роорпЗроорпНрокроЯрпБродрпНродрокрпНрокроЯрпНроЯ роирпАро░рпНрокрпНрокро╛роЪройроорпН роЕро▓рпНро▓родрпБ роЙро░рооро┐роЯрпНроЯ рокро┐ро▒роХрпБ роЕро▒ро┐роХрпБро▒ро┐роХро│рпН роХрпБро▒рпИроирпНродрпБро╡ро┐роЯрпНроЯродро╛?",
            "dh_q30": "роорпБроирпНродрпИроп рокро░рпБро╡роЩрпНроХро│ро┐ро▓ро┐ро░рпБроирпНродрпБ роЗро▒роирпНрод роЗродроп роЕро▒ро┐роХрпБро▒ро┐роХро│рпН роорпАрогрпНроЯрпБроорпН роПро▒рпНрокроЯро╡ро┐ро▓рпНро▓рпИропро╛?",
            "in_q1": "рокропро┐ро░рпН 120 роиро╛роЯрпНроХро│рпН роЕро▓рпНро▓родрпБ роЕродро▒рпНроХрпБроорпН роХрпБро▒рпИро╡ро╛роХ роЙро│рпНро│родро╛ (роЕродро╛ро╡родрпБ, роорпБродро▓рпН 4 рооро╛родроЩрпНроХро│рпБроХрпНроХрпБро│рпН)?",
            "in_q2": "роироЯрпНроЯ 4 рооро╛родроЩрпНроХро│рпБроХрпНроХрпБрокрпН рокро┐ро▒роХрпБ роЪрпЗродроорпН родрпКроЯроЩрпНроХро┐ропродро╛?",
            "in_q3": "рооро╛ро░рпНроЪрпН рооро▒рпНро▒рпБроорпН роЬрпВройрпН рооро╛родроЩрпНроХро│рпБроХрпНроХрпБ роЗроЯрпИропро┐ро▓рпН роЪрпЗродродрпНродрпИ роорпБродро▓ро┐ро▓рпН роХро╡ройро┐родрпНродрпАро░рпНроХро│ро╛?",
            "in_q4": "роЬрпВройрпН рооро▒рпНро▒рпБроорпН роЯро┐роЪроорпНрокро░рпН рооро╛родроЩрпНроХро│рпБроХрпНроХрпБ роЗроЯрпИропро┐ро▓рпН роЪрпЗродродрпНродрпИ роорпБродро▓ро┐ро▓рпН роХро╡ройро┐родрпНродрпАро░рпНроХро│ро╛?",
            "in_q5": "роироЯрпНроЯ роЙроЯройрпЗропрпЗ (роЪрпБрооро╛ро░рпН 15 роиро╛роЯрпНроХро│рпБроХрпНроХрпБро│рпН) родро╛роХрпНроХрпБродро▓рпН родрпКроЯроЩрпНроХро┐ропродро╛?",
            "in_q6": "роироЯрпНроЯ 4 рооро╛родроЩрпНроХро│рпБроХрпНроХрпБрокрпН рокро┐ро▒роХрпБ роЪрпЗродроорпН родрпЛройрпНро▒рпБро╡родрпБ роиро┐ройрпНро▒родро╛?",
            "in_q7": "роироЯрпНроЯ 7-9 рооро╛родроЩрпНроХро│ро┐ро▓рпН роЙроЪрпНроЪ роЪрпЗродроорпН родрпЛройрпНро▒рпБроХро┐ро▒родро╛?",
            "in_q8": "родрогрпНроЯро┐ройрпН роХрпАро┤рпНрокроХрпБродро┐ропро┐ро▓ро┐ро░рпБроирпНродрпБ роЪрпЗродроорпН родрпКроЯроЩрпНроХрпБро╡родрпБ рокрпЛро▓рпН родрпЖро░ро┐роХро┐ро▒родро╛?",
            "in_q9": "родрогрпНроЯро┐ройрпН р▓ор│Зр▓▓р│НрокрпН рокроХрпБродро┐ропро┐ро▓ро┐ро░рпБроирпНродрпБ роЪрпЗродроорпН родрпКроЯроЩрпНроХрпБро╡родрпБ рокрпЛро▓рпН родрпЖро░ро┐роХро┐ро▒родро╛?",
            "in_q10": "родрпБро│рпИроХро│рпН роорогрпНрогро┐ро▓ро┐ро░рпБроирпНродрпБ 15 роЪрпЖ.роорпА.роХрпНроХрпБро│рпН роЙро│рпНро│родро╛?",
            "in_q11": "родрпБро│рпИроХро│рпН роорпЗро▓рпН роХрогрпБроХрпНроХро│ро┐ро▓рпН роЙро│рпНро│родро╛?",
            "in_q12": "роЪро┐ро▓ родрогрпНроЯрпБ роХрогрпБроХрпНроХро│рпН роЙро░рпБроХрпНроХрпБро▓рпИроирпНродрпБ роЕро▓рпНро▓родрпБ роЪрпБро░рпБроЩрпНроХро┐ роЙро│рпНро│родро╛?",
            "in_q13": "родро░рпИроХрпНроХрпБ роорпЗро▓рпЗ родрогрпНроЯрпБроХро│ро┐ро▓рпН роЪро┐ро▒ро┐роп ро╡ро╛ройрпНро╡ро┤ро┐ ро╡рпЗро░рпНроХро│рпН родрпЛройрпНро▒рпБро╡родрпИрокрпН рокро╛ро░рпНроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "in_q14": "роЗро▒роирпНрод роорпИропродрпН родрогрпНроЯрпИ роЗро┤рпБроХрпНроХрпБроорпНрокрпЛродрпБ, роЕродрпБ роОро│ро┐родро╛роХ ро╡ро░рпБроХро┐ро▒родро╛?",
            "in_q15": "роЗро┤рпБроХрпНроХрокрпНрокроЯрпНроЯ родро│ро┐ро░ро┐ро▓рпН родрпБро░рпНроиро╛ро▒рпНро▒роорпН ро╡рпАроЪрпБроХро┐ро▒родро╛?",
            "in_q16": "роЗро┤рпБроХрпНроХрокрпНрокроЯрпНроЯ родрогрпНроЯрпИ роЕроХро▒рпНро▒рпБро╡родрпБ роХроЯро┐ройрооро╛роХ роЙро│рпНро│родро╛?",
            "in_q17": "роЕроХро▒рпНро▒рпБроорпНрокрпЛродрпБ, родро│ро┐ро░ро┐ро▓ро┐ро░рпБроирпНродрпБ родрпБро░рпНроиро╛ро▒рпНро▒роорпН ро╡ро░ро╡ро┐ро▓рпНро▓рпИропро╛?",
            "in_q18": "рокрпВроЪрпНроЪро┐ роорпБроЯрпНроЯрпИроХро│рпН роХрпАро┤рпН роЗро▓рпИроХро│ро┐ройрпН роЕроЯро┐рокрпНрокроХрпНроХродрпНродро┐ро▓рпН роЙро│рпНро│родро╛?",
            "in_q19": "рокрпВроЪрпНроЪро┐ роорпБроЯрпНроЯрпИроХро│рпН роорпЗро▓рпН роЗро▓рпИроХро│ро┐ройрпН роЕроЯро┐рокрпНрокроХрпНроХродрпНродро┐ро▓рпН роЙро│рпНро│родро╛?",
            "in_q20": "роорпБроЯрпНроЯрпИроХро│рпН родроЯрпНроЯрпИропро╛роХро╡рпБроорпН, ро╡рпЖро│рпНро│рпИропро╛роХро╡рпБроорпН, 1 рооро┐.роорпА.роХрпНроХрпБроорпН роХрпБро▒рпИро╡ро╛роХро╡рпБроорпН роЙро│рпНро│родро╛?",
            "in_q21": "рокрпБро┤рпБро╡ро┐ройрпН роЙроЯро▓ро┐ро▓рпН 5 родрпЖро░ро┐ропрпБроорпН роХрпЛроЯрпБроХро│рпН роЙро│рпНро│родро╛?",
            "in_q22": "рокрпБро┤рпБро╡ро┐ройрпН роЙроЯро▓ро┐ро▓рпН 4 родрпЖро░ро┐ропрпБроорпН роХрпЛроЯрпБроХро│рпН роороЯрпНроЯрпБроорпН роЙро│рпНро│родро╛?",
            "in_q23": "родрогрпНроЯро┐ройрпН роЕро░рпБроХрпЗ рокрпБродро┐роп родрпВро│рпН рокрпЛройрпНро▒ роХро┤ро┐ро╡рпБроХро│рпН роХро╛рогрокрпНрокроЯрпБроХро┐ро▒родро╛?",
            "in_q24": "роорпЗро▓рпН роХрогрпБроХрпНроХро│ро┐ро▓рпН рокрпБродро┐роп роХро┤ро┐ро╡рпБроХро│рпН роХро╛рогрокрпНрокроЯрпБроХро┐ро▒родро╛?",
            "in_q25": "роЖро░роорпНрок роХроЯрпНроЯроЩрпНроХро│ро┐ро▓рпН, родрпБро│рпИроХро│рпН роЗро▓рпНро▓ро╛рооро▓рпН рокроЪрпНроЪрпИ роЗро▓рпИ роЪрпБро░рогрпНроЯро▓рпИ роороЯрпНроЯрпБроорпН рокро╛ро░рпНроХрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "in_q26": "роХрогрпБроХрпНроХро│рпН роорпБро┤рпБроорпИропро╛роХ ро╡ро│ро░рпНроирпНрод рокро┐ро▒роХрпБродро╛ройрпН роЪрпЗродроорпН роПро▒рпНрокроЯрпНроЯрпБро│рпНро│родро╛?",
            "in_q27": "роЗро▒роирпНрод родро│ро┐ро░рпНроХро│рпБроЯройрпН, роХрпКродрпНродро╛рой роЕро▓рпНро▓родрпБ роЕроЪро╛родро╛ро░рогрооро╛рой роорпЗро▓рпН ро╡ро│ро░рпНроЪрпНроЪро┐ропрпИроХрпН роХро╛рогрпНроХро┐ро▒рпАро░рпНроХро│ро╛?",
            "in_q28": "роЪрпЗродроорпН родрпКроЯроЩрпНроХрпБро╡родро▒рпНроХрпБ роорпБройрпН роЕродро┐роХ роЕро│ро╡рпБ роирпИроЯрпНро░роЬройрпН/ропрпВро░ро┐ропро╛ рокропройрпНрокроЯрпБродрпНродро┐ройрпАро░рпНроХро│ро╛?",
            "in_q29": "рокропро┐ро░рпН рокро░рпБро╡родрпНродро┐ройрпН роЖро░роорпНрокродрпНродро┐ро▓рпН роХрпБрокрпНрокрпИ роорпВроЯро╛роХрпНроХрпБродро▓рпН роЪрпЖропрпНропрокрпНрокроЯрпНроЯродро╛?",
            "in_q30": "роХрпАро┤рпН родрогрпНроЯрпБ рокроХрпБродро┐ропрпИ рооро▒рпИроХрпНроХ роорогрпН роЕрогрпИрокрпНрокрпБ роЪрпЖропрпНропрокрпНрокроЯрпНроЯродро╛?"
        }
    },
    hi: {
        // Static UI Text
        headerTitle: "ЁЯзСтАНЁЯМ╛ рдПрдЧреНрд░реА-рдПрдЖрдИ рдирд┐рджрд╛рди",
        headerLead: "рд╕рдВрдкреВрд░реНрдг рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХреЗ рд▓рд┐рдП рдлрд╕рд▓ рдпрд╛ рдХреАрдЯ рдХреА рдЫрд╡рд┐ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВред",
        translateButton: "рдЕрдиреБрд╡рд╛рдж",
        step1Title: "рдЪрд░рдг 1: рдЪрд┐рддреНрд░ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ",
        uploadLabel: "ЁЯМ┐ рдЪрд┐рддреНрд░ рдЕрдкрд▓реЛрдб рдХрд░реЗрдВ (рдлрд╕рд▓ рдпрд╛ рдХреАрдЯ)",
        analyzeButton: "рдЪрд┐рддреНрд░ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░реЗрдВ",
        loadingSpinner: "рд▓реЛрдб рд╣реЛ рд░рд╣рд╛ рд╣реИ...",
        step2Title: "рдЪрд░рдг 2: рдХреБрдЫ рдкреНрд░рд╢реНрдиреЛрдВ рдХреЗ рдЙрддреНрддрд░ рджреЗрдВ",
        step2Lead: "рдХреГрдкрдпрд╛ рдиреАрдЪреЗ рджреА рдЧрдИ рдЫрд╡рд┐ рдФрд░ рдЕрдкрдиреЗ рдЕрд╡рд▓реЛрдХрдиреЛрдВ рдХреЗ рдЖрдзрд╛рд░ рдкрд░ рдЕрддрд┐рд░рд┐рдХреНрдд рдЬрд╛рдирдХрд╛рд░реА рдкреНрд░рджрд╛рди рдХрд░реЗрдВред",
        getDiagnosisButton: "рдЕрдВрддрд┐рдо рдирд┐рджрд╛рди рдкреНрд░рд╛рдкреНрдд рдХрд░реЗрдВ",
        resultsTitle: "рдЕрдВрддрд┐рдо рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
        resetButton: "рджреВрд╕рд░реА рдлрд╕рд▓ рдХрд╛ рд╡рд┐рд╢реНрд▓реЗрд╖рдг рдХрд░реЗрдВ",
        diseaseSectionTitle: "рдбреЗрдб-рд╣рд╛рд░реНрдЯ рдХреЗ рд▓рдХреНрд╖рдг",
        insectSectionTitle: "рд▓рд╛рд░реНрд╡рд╛ рдХреЗ рд▓рдХреНрд╖рдг",
        yes: "рд╣рд╛рдБ",
        no: "рдирд╣реАрдВ",
        diseaseAnalysisTitle: "ЁЯМ┐ рд░реЛрдЧ рд╡рд┐рд╢реНрд▓реЗрд╖рдг (рдбреЗрдб рд╣рд╛рд░реНрдЯ)",
        insectAnalysisTitle: "ЁЯРЫ рдХреАрдЯ рд╡рд┐рд╢реНрд▓реЗрд╖рдг",
        finalDiagnosisLabel: "рдЕрдВрддрд┐рдо рдирд┐рджрд╛рди:",
        visualDetectionLabel: "рджреГрд╢реНрдп рдкрд╣рдЪрд╛рди (рдЫрд╡рд┐):",
        symptomAnalysisLabel: "рд▓рдХреНрд╖рдг рд╡рд┐рд╢реНрд▓реЗрд╖рдг (рдЯреИрдмрдиреЗрдЯ):",
        fusedCertaintyLabel: "рд╕рдВрдпреБрдХреНрдд рдирд┐рд╢реНрдЪрд┐рддрддрд╛:",
        recommendationTitle: "ЁЯТб рд╕рд┐рдлрд╛рд░рд┐рд╢",
        // Dynamic Questions (Translated to Hindi)
        dynamic_questions: {
            "dh_q1": "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдбрдВрдард▓ рдХреЗ рдХреЗрдВрджреНрд░реАрдп рд╡реГрджреНрдзрд┐ рдмрд┐рдВрджреБ рдХреЛ рдХреНрд╖рддрд┐рдЧреНрд░рд╕реНрдд рдпрд╛ рдореГрдд рджреЗрдЦрд╛ рд╣реИ?",
            "dh_q2": "рдХреНрдпрд╛ рдореГрдд рдХреЗрдВрджреНрд░реАрдп рдЕрдВрдХреБрд░ рднреВрд╕реЗ рдХреЗ рд░рдВрдЧ рдХрд╛ рд╣реИ?",
            "dh_q3": "рдбреЗрдб-рд╣рд╛рд░реНрдЯ рдЦреАрдВрдЪрдиреЗ рдХреЗ рдмрд╛рдж, рдХреНрдпрд╛ рдЖрдкрдХреЛ рджреНрд╡рд┐рддреАрдпрдХ рдлреАрдбрд░ (рдкреНрд░рд╛рдердорд┐рдХ рдмреЛрд░рд░реНрд╕ рдирд╣реАрдВ) рдЬреИрд╕реЗ рдореИрдЧреЙрдЯ рдорд┐рд▓рддреЗ рд╣реИрдВ?",
            "dh_q4": "рдбреЗрдб-рд╣рд╛рд░реНрдЯ рдЦреАрдВрдЪрдиреЗ рдХреЗ рдмрд╛рдж, рдХреНрдпрд╛ рдЖрдкрдХреЛ рдкреНрд░рднрд╛рд╡рд┐рдд рддрдиреЗ рдХреЗ рдЕрдВрджрд░ рддрд╛рдЬрд╝реЗ рдЬреАрд╡рд┐рдд рд▓рд╛рд░реНрд╡рд╛ рдорд┐рд▓рддреЗ рд╣реИрдВ?",
            "dh_q5": "рдХреНрдпрд╛ рдЕрдзрд┐рдХрд╛рдВрд╢ рджреГрд╢реНрдп рдХреНрд╖рддрд┐ рдмрд╛рд╣рд░ рдХреЗ рдмрдЬрд╛рдп рддрдиреЗ рдХреЗ рдЕрдВрджрд░ рд╣реИ?",
            "dh_q6": "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдкрддреНрддрд┐рдпреЛрдВ рдХреЗ рд╡рд┐рдХрд╛рд╕ рдФрд░ рдирд░рдо рд╣реЛрдиреЗ рдкрд░ рдХреАрдЯреЛрдВ рдХрд╛ рд╣рдорд▓рд╛ рджреЗрдЦрд╛ рд╣реИ?",
            "dh_q7": "рдХреНрдпрд╛ рдлрд╕рд▓ рдкрд┐рдЫрд▓реЗ 15 рджрд┐рдиреЛрдВ рдХреЗ рднреАрддрд░ рд▓рдЧрд╛рдИ рдЧрдИ рдереА?",
            "dh_q8": "рдХреНрдпрд╛ рдЖрдкрдиреЗ рджрд┐рди рдореЗрдВ рдкрддрдВрдЧреЛрдВ рдХреЛ рдЙрдбрд╝рддреЗ рд╣реБрдП рдХрднреА рдирд╣реАрдВ рджреЗрдЦрд╛ рд╣реИ?",
            "dh_q9": "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдЬреНрдпрд╛рджрд╛рддрд░ рд░рд╛рдд рдореЗрдВ рд╕рдВрднреЛрдЧ рдпрд╛ рдЕрдВрдбреЗ рджреЗрдиреЗ рдХреА рдЧрддрд┐рд╡рд┐рдзрд┐ рджреЗрдЦреА рд╣реИ?",
            "dh_q10": "рдХреНрдпрд╛ рдЦреЗрдд рдореЗрдВ рдХреЛрдИ рдЬреИрд╡рд┐рдХ рдирд┐рдпрдВрддреНрд░рдг рдХреАрдбрд╝реЗ рдЫреЛрдбрд╝реЗ рдЧрдП рдереЗ?",
            "dh_q11": "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдкреВрд░реА рддрд░рд╣ рд╕реЗ рд╡рд┐рдХрд╕рд┐рдд рдкрддрдВрдЧреЗ рджреЗрдЦреЗ рд╣реИрдВ рдЬреЛ рднреВрд╕реЗ рд╕реЗ рд╣рд▓реНрдХреЗ рднреВрд░реЗ рд░рдВрдЧ рдХреЗ рд╣реЛрддреЗ рд╣реИрдВ?",
            "dh_q12": "рдХреНрдпрд╛ рдпреБрд╡рд╛ рдкреМрдзреЛрдВ рдХрд╛ рдХреЗрдВрджреНрд░реАрдп рдЕрдВрдХреБрд░ рд╕реВрдЦрд╛, рднреВрд░рд╛ рдпрд╛ рднреВрд╕реЗ рдХреЗ рд░рдВрдЧ рдХрд╛ рд╣реЛрддрд╛ рд╣реИ?",
            "dh_q13": "рдХреНрдпрд╛ рдзреАрд░реЗ рд╕реЗ рдЦреАрдВрдЪрдиреЗ рдкрд░ рдХреЗрдВрджреНрд░реАрдп рдЕрдВрдХреБрд░ рдЖрд╕рд╛рдиреА рд╕реЗ рдмрд╛рд╣рд░ рдЖ рдЬрд╛рддрд╛ рд╣реИ?",
            "dh_q14": "рдХреНрдпрд╛ рдЦреАрдВрдЪреЗ рдЧрдП рдЕрдВрдХреБрд░ рд╕реЗ рджреБрд░реНрдЧрдВрдз рдпрд╛ рд╕рдбрд╝реА рд╣реБрдИ рдЧрдВрдз рдЖрддреА рд╣реИ?",
            "dh_q15": "рдХреНрдпрд╛ рдХреЗрдВрджреНрд░реАрдп рдЕрдВрдХреБрд░ рдХреЗ рдЖрд╕рдкрд╛рд╕ рдХреА рдкрддреНрддрд┐рдпрд╛рдБ рдкреАрд▓реА рдкрдбрд╝ рд░рд╣реА рд╣реИрдВ, рдореБрд░рдЭрд╛ рд░рд╣реА рд╣реИрдВ рдпрд╛ рд╕реВрдЦ рд░рд╣реА рд╣реИрдВ?",
            "dh_q16": "рдХреНрдпрд╛ рдкреМрдзреЛрдВ рдХреЗ рдзрдмреНрдмреЛрдВ рдореЗрдВ рд╕реВрдЦреЗ рдпрд╛ рдореГрдд рдХреЗрдВрджреНрд░реЛрдВ рд╡рд╛рд▓реЗ рдХрдИ рдбрдВрдард▓ рджрд┐рдЦрд╛рдИ рджреЗрддреЗ рд╣реИрдВ?",
            "dh_q17": "рдХреНрдпрд╛ рд╣рд╛рд▓ рд╣реА рдореЗрдВ рд╣реБрдИ рдмрд╛рд░рд┐рд╢ рдпрд╛ рдЬрд▓рднрд░рд╛рд╡ рдХреЗ рдмрд╛рдж рдбреЗрдб рд╣рд╛рд░реНрдЯ рдХрд╛ рдкреНрд░рддрд┐рд╢рдд рдмрдврд╝рд╛ рд╣реИ?",
            "dh_q18": "рдХреНрдпрд╛ рдкреНрд░рднрд╛рд╡рд┐рдд рдкреМрдзреЗ рдЖрд╕рдкрд╛рд╕ рдХреЗ рд╕реНрд╡рд╕реНрде рдкреМрдзреЛрдВ рдХреА рддреБрд▓рдирд╛ рдореЗрдВ рдЕрд╡рд┐рдХрд╕рд┐рдд рдпрд╛ рдЫреЛрдЯреЗ рд╣реИрдВ?",
            "dh_q19": "рдХреНрдпрд╛ рдкреНрд░рднрд╛рд╡рд┐рдд рдкреМрдзреЗ рдирдП рд╣рд░реЗ рдЕрдВрдХреБрд░ рдпрд╛ рдкрддреНрддрд┐рдпрд╛рдВ рдкреИрджрд╛ рдХрд░рдиреЗ рдореЗрдВ рд╡рд┐рдлрд▓ рд░рд╣рддреЗ рд╣реИрдВ?",
            "dh_q20": "рдХреНрдпрд╛ рдкреНрд░рднрд╛рд╡рд┐рдд рдбрдВрдард▓реЛрдВ рдХреЗ рдЕрдВрджрд░ рдирд░рдо, рдЦреЛрдЦрд▓реЗ рдпрд╛ рд╕реБрд░рдВрдЧ рдЬреИрд╕реЗ рдХреНрд╖реЗрддреНрд░ рд╣реИрдВ?",
            "dh_q21": "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдкреНрд░рднрд╛рд╡рд┐рдд рдбрдВрдард▓реЛрдВ рдХреЗ рд╢реАрд░реНрд╖ рдкрд░ рдЧреБрдЪреНрдЫреЗрджрд╛рд░ рдпрд╛ рдЕрд╕рд╛рдорд╛рдиреНрдп рд╡реГрджреНрдзрд┐ рджреЗрдЦреА рд╣реИ?",
            "dh_q22": "рдХреНрдпрд╛ рдЙрди рдХреНрд╖реЗрддреНрд░реЛрдВ рдореЗрдВ рдорд┐рдЯреНрдЯреА рдХреА рдирдореА рдФрд░ рдЬрд▓ рдирд┐рдХрд╛рд╕реА рдЦрд░рд╛рдм рд╣реИ рдЬрд╣рд╛рдБ рдбреЗрдб рд╣рд╛рд░реНрдЯ рджрд┐рдЦрд╛рдИ рджреЗрддреЗ рд╣реИрдВ?",
            "dh_q23": "рдХреНрдпрд╛ рдЦреЗрдд рдореЗрдВ рдХреЛрдИ рд╕реВрдЦреЗ рдХреЗрдВрджреНрд░реАрдп рдЕрдВрдХреБрд░ рдирд╣реАрдВ рд╣реИрдВ?",
            "dh_q24": "рдХреНрдпрд╛ рдкреВрд░реЗ рдЦреЗрдд рдореЗрдВ рдкреМрдзреЗ рдХреА рдКрдВрдЪрд╛рдИ рдПрдХ рд╕рдорд╛рди рдФрд░ рд╕рд╛рдорд╛рдиреНрдп рд╣реИ?",
            "dh_q25": "рдХреЗрдВрджреНрд░реАрдп рдЕрдВрдХреБрд░ рдХреЛ рдЦреАрдВрдЪрддреЗ рд╕рдордп, рдХреНрдпрд╛ рдпрд╣ рдЖрд╕рд╛рдиреА рд╕реЗ рдмрд╛рд╣рд░ рдЖрдП рдмрд┐рдирд╛ рдордЬрдмреВрддреА рд╕реЗ рдЬреБрдбрд╝рд╛ рд╣реЛрддрд╛ рд╣реИ?",
            "dh_q26": "рдХреНрдпрд╛ рдЕрдВрдХреБрд░ рдХреЗ рдЖрдзрд╛рд░ рд╕реЗ рд╕рдбрд╝рди рдпрд╛ рджреБрд░реНрдЧрдВрдз рдХреЗ рдмрд┐рдирд╛ рддрд╛рдЬрд╝рд╛ рдЧрдВрдз рдЖрддреА рд╣реИ?",
            "dh_q27": "рдХреНрдпрд╛ рдХреЗрдВрджреНрд░реАрдп рдЕрдВрдХреБрд░ рдХреЗ рдкрд╛рд╕ рдХреА рдкрддреНрддрд┐рдпрд╛рдБ рд╕реНрд╡рд╕реНрде, рд╣рд░реА рдФрд░ рдореБрд░рдЭрд╛рдИ рд╣реБрдИ рдирд╣реАрдВ рд╣реИрдВ?",
            "dh_q28": "рдХреНрдпрд╛ рдЖрдкрдХреЗ рдкрд╛рд╕ рдХрдИ рдореГрдд рдпрд╛ рд╕реВрдЦреЗ рдЕрдВрдХреБрд░реЛрдВ рд╡рд╛рд▓реЗ рдХреЛрдИ рдзрдмреНрдмреЗ рдирд╣реАрдВ рд╣реИрдВ?",
            "dh_q29": "рдХреНрдпрд╛ рдмреЗрд╣рддрд░ рд╕рд┐рдВрдЪрд╛рдИ рдпрд╛ рдЙрд░реНрд╡рд░реАрдХрд░рдг рдХреЗ рдмрд╛рдж рд▓рдХреНрд╖рдг рдХрдо рд╣реБрдП рд╣реИрдВ?",
            "dh_q30": "рдХреНрдпрд╛ рдкрд┐рдЫрд▓реЗ рдореМрд╕рдореЛрдВ рд╕реЗ рдбреЗрдб рд╣рд╛рд░реНрдЯ рдХреЗ рд▓рдХреНрд╖рдгреЛрдВ рдХреА рдХреЛрдИ рдкреБрдирд░рд╛рд╡реГрддреНрддрд┐ рдирд╣реАрдВ рд╣реБрдИ рд╣реИ?",
            "in_q1": "рдХреНрдпрд╛ рдлрд╕рд▓ тЙд 120 рджрд┐рди рдкреБрд░рд╛рдиреА рд╣реИ (рдпрд╛рдиреА, рдкрд╣рд▓реЗ 4 рдорд╣реАрдиреЛрдВ рдХреЗ рднреАрддрд░)?",
            "in_q2": "рдХреНрдпрд╛ рдХреНрд╖рддрд┐ рд░реЛрдкрдг рдХреЗ 4 рдорд╣реАрдиреЗ рдмрд╛рдж рд╢реБрд░реВ рд╣реБрдИ?",
            "in_q3": "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдкрд╣рд▓реА рдмрд╛рд░ рдорд╛рд░реНрдЪ рдФрд░ рдЬреВрди рдХреЗ рдмреАрдЪ рдХреНрд╖рддрд┐ рджреЗрдЦреА?",
            "in_q4": "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдкрд╣рд▓реА рдмрд╛рд░ рдЬреВрди рдФрд░ рджрд┐рд╕рдВрдмрд░ рдХреЗ рдмреАрдЪ рдХреНрд╖рддрд┐ рджреЗрдЦреА?",
            "in_q5": "рдХреНрдпрд╛ рд░реЛрдкрдг рдХреЗ рддреБрд░рдВрдд рдмрд╛рдж (рд▓рдЧрднрдЧ 15 рджрд┐рдиреЛрдВ рдХреЗ рднреАрддрд░) рд╣рдорд▓реЗ рд╢реБрд░реВ рд╣реБрдП?",
            "in_q6": "рдХреНрдпрд╛ рд░реЛрдкрдг рдХреЗ 4 рдорд╣реАрдиреЗ рдмрд╛рдж рдХреНрд╖рддрд┐ рджрд┐рдЦрдирд╛ рдмрдВрдж рд╣реЛ рдЧрдИ?",
            "in_q7": "рдХреНрдпрд╛ рд░реЛрдкрдг рдХреЗ 7-9 рдорд╣реАрдиреЗ рдХреЗ рдЖрд╕рдкрд╛рд╕ рдЪрд░рдо рдХреНрд╖рддрд┐ рджрд┐рдЦрд╛рдИ рджреЗ рд░рд╣реА рд╣реИ?",
            "in_q8": "рдХреНрдпрд╛ рдХреНрд╖рддрд┐ рдбрдВрдард▓ рдХреЗ рдирд┐рдЪрд▓реЗ рд╣рд┐рд╕реНрд╕реЗ рд╕реЗ рд╢реБрд░реВ рд╣реЛрддреА рджрд┐рдЦ рд░рд╣реА рд╣реИ?",
            "in_q9": "рдХреНрдпрд╛ рдХреНрд╖рддрд┐ рдбрдВрдард▓ рдХреЗ рдКрдкрд░реА рд╣рд┐рд╕реНрд╕реЗ рд╕реЗ рд╢реБрд░реВ рд╣реЛрддреА рджрд┐рдЦ рд░рд╣реА рд╣реИ?",
            "in_q10": "рдХреНрдпрд╛ рдмреЛрд░ рд╣реЛрд▓ рдорд┐рдЯреНрдЯреА рд╕реЗ 15 рд╕реЗрдореА рдХреЗ рднреАрддрд░ рд╣реИрдВ?",
            "in_q11": "рдХреНрдпрд╛ рдмреЛрд░ рд╣реЛрд▓ рдКрдкрд░реА рдкреЛрд░реЛрдВ рдкрд░ рд╣реИрдВ?",
            "in_q12": "рдХреНрдпрд╛ рдХреБрдЫ рдбрдВрдард▓ рдХреЗ рдкреЛрд░ рд╡рд┐рдХреГрдд рдпрд╛ рд╕рдВрдХреБрдЪрд┐рдд рд╣реИрдВ?",
            "in_q13": "рдХреНрдпрд╛ рдЖрдк рдЬрдореАрди рдХреЗ рдКрдкрд░ рдбрдВрдард▓реЛрдВ рдкрд░ рдЫреЛрдЯреА рд╣рд╡рд╛рдИ рдЬрдбрд╝реЗрдВ рджрд┐рдЦрд╛рдИ рджреЗ рд░рд╣реА рд╣реИрдВ?",
            "in_q14": "рдЬрдм рдЖрдк рдореГрдд рдХреЗрдВрджреНрд░реАрдп рдЕрдВрдХреБрд░ рдХреЛ рдЦреАрдВрдЪрддреЗ рд╣реИрдВ, рддреЛ рдХреНрдпрд╛ рд╡рд╣ рдЖрд╕рд╛рдиреА рд╕реЗ рдмрд╛рд╣рд░ рдЖ рдЬрд╛рддрд╛ рд╣реИ?",
            "in_q15": "рдХреНрдпрд╛ рдЦреАрдВрдЪреЗ рдЧрдП рдЕрдВрдХреБрд░ рд╕реЗ рджреБрд░реНрдЧрдВрдз рдпрд╛ рдЦрд░рд╛рдм рдЧрдВрдз рдЖрддреА рд╣реИ?",
            "in_q16": "рдХреНрдпрд╛ рдЦреАрдВрдЪреЗ рдЧрдП рдЕрдВрдХреБрд░ рдХреЛ рд╣рдЯрд╛рдирд╛ рдореБрд╢реНрдХрд┐рд▓ рд╣реИ?",
            "in_q17": "рд╣рдЯрд╛рдиреЗ рдкрд░, рдХреНрдпрд╛ рдЕрдВрдХреБрд░ рд╕реЗ рдХреЛрдИ рдЦрд░рд╛рдм рдЧрдВрдз рдирд╣реАрдВ рдЖрддреА рд╣реИ?",
            "in_q18": "рдХреНрдпрд╛ рдХреАрдЯ рдХреЗ рдЕрдВрдбреЗ рдирд┐рдЪрд▓реА рдкрддреНрддрд┐рдпреЛрдВ рдХреЗ рдиреАрдЪреЗ рдореМрдЬреВрдж рд╣реИрдВ?",
            "in_q19": "рдХреНрдпрд╛ рдХреАрдЯ рдХреЗ рдЕрдВрдбреЗ рдКрдкрд░реА рдкрддреНрддрд┐рдпреЛрдВ рдХреЗ рдиреАрдЪреЗ рдореМрдЬреВрдж рд╣реИрдВ?",
            "in_q20": "рдХреНрдпрд╛ рдЕрдВрдбреЗ рд╕рдкрд╛рдЯ, рд╕рдлреЗрдж рдФрд░ 1 рдорд┐рдореА рд╕реЗ рдЫреЛрдЯреЗ рд╣реИрдВ?",
            "in_q21": "рдХреНрдпрд╛ рд▓рд╛рд░реНрд╡рд╛ рдХреЗ рд╢рд░реАрд░ рдкрд░ 5 рджреГрд╢реНрдп рдзрд╛рд░рд┐рдпрд╛рдБ рд╣реИрдВ?",
            "in_q22": "рдХреНрдпрд╛ рд▓рд╛рд░реНрд╡рд╛ рдХреЗ рд╢рд░реАрд░ рдкрд░ рдХреЗрд╡рд▓ 4 рджреГрд╢реНрдп рдзрд╛рд░рд┐рдпрд╛рдБ рд╣реИрдВ?",
            "in_q23": "рдХреНрдпрд╛ рдбрдВрдард▓ рдХреЗ рдЖрдзрд╛рд░ рдХреЗ рдкрд╛рд╕ рддрд╛рдЬрд╝рд╛ рдкрд╛рдЙрдбрд░ рдЬреИрд╕рд╛ рдорд▓ рджрд┐рдЦрд╛рдИ рджреЗрддрд╛ рд╣реИ?",
            "in_q24": "рдХреНрдпрд╛ рдКрдкрд░реА рдкреЛрд░реЛрдВ рдкрд░ рддрд╛рдЬрд╝рд╛ рдорд▓ рджрд┐рдЦрд╛рдИ рджреЗрддрд╛ рд╣реИ?",
            "in_q25": "рдкреНрд░рд╛рд░рдВрднрд┐рдХ рдЕрд╡рд╕реНрдерд╛ рдореЗрдВ, рдХреНрдпрд╛ рдЖрдк рдмреЛрд░ рд╣реЛрд▓ рдХреЗ рдмрд┐рдирд╛ рдХреЗрд╡рд▓ рд╣рд░реА рдкрддреНрддреА рдХреА рдЦреБрд░рдЪрди рджреЗрдЦрддреЗ рд╣реИрдВ?",
            "in_q26": "рдХреНрдпрд╛ рдкреЛрд░реЛрдВ рдХреЗ рдкреВрд░реА рддрд░рд╣ рд╕реЗ рд╡рд┐рдХрд╕рд┐рдд рд╣реЛрдиреЗ рдХреЗ рдмрд╛рдж рд╣реА рдХреНрд╖рддрд┐ рд╣реБрдИ рд╣реИ?",
            "in_q27": "рдореГрдд рдЕрдВрдХреБрд░реЛрдВ рдХреЗ рд╕рд╛рде, рдХреНрдпрд╛ рдЖрдк рдЧреБрдЪреНрдЫреЗрджрд╛рд░ рдпрд╛ рдЕрд╕рд╛рдорд╛рдиреНрдп рд╢реАрд░реНрд╖ рд╡реГрджреНрдзрд┐ рджреЗрдЦрддреЗ рд╣реИрдВ?",
            "in_q28": "рдХреНрдпрд╛ рдЖрдкрдиреЗ рдХреНрд╖рддрд┐ рд╢реБрд░реВ рд╣реЛрдиреЗ рд╕реЗ рдкрд╣рд▓реЗ рдирд╛рдЗрдЯреНрд░реЛрдЬрди/рдпреВрд░рд┐рдпрд╛ рдХреА рдЙрдЪреНрдЪ рдЦреБрд░рд╛рдХ рджреА рдереА?",
            "in_q29": "рдХреНрдпрд╛ рдлрд╕рд▓ рдХреА рдкреНрд░рд╛рд░рдВрднрд┐рдХ рдЕрд╡рд╕реНрдерд╛ рдореЗрдВ рдХрдЪрд░рд╛ рдорд▓реНрдЪрд┐рдВрдЧ рдХрд┐рдпрд╛ рдЧрдпрд╛ рдерд╛?",
            "in_q30": "рдХреНрдпрд╛ рдирд┐рдЪрд▓реЗ рдбрдВрдард▓ рдХреНрд╖реЗрддреНрд░ рдХреЛ рдврдХрдиреЗ рдХреЗ рд▓рд┐рдП рдорд┐рдЯреНрдЯреА рдЪрдврд╝рд╛рдИ рдЧрдИ рдереА?"
        }
    }
};

function translatePage() {
    document.querySelectorAll('[data-translate-key]').forEach(el => {
        const key = el.getAttribute('data-translate-key');
        if (translations[currentLanguage] && translations[currentLanguage][key]) {
            el.innerText = translations[currentLanguage][key];
        }
    });

    // Re-render questions if the symptom card is visible
    if (symptomCard.style.display === 'block' && analysisData.questions) {
        displayQuestions(analysisData);
    }
    
    // Re-render results if the results card is visible
    if (resultsCard.style.display === 'block' && analysisData.results) {
        displayResults(analysisData.results);
    }
}

function setLanguage(lang) {
    currentLanguage = lang;
    translatePage();
}

// ============== EXISTING CODE (No changes needed below this line, except for displayResults) ==============
const uploadForm = document.getElementById('upload-form');
const imageInput = document.getElementById('image-input');
const spinner = document.getElementById('spinner');
const resetBtn = document.getElementById('reset-btn');
const uploadCard = document.getElementById('upload-card');
const symptomCard = document.getElementById('symptom-card');
const symptomForm = document.getElementById('symptom-form');
const submitSymptomsBtn = document.getElementById('submit-symptoms');
const resultsCard = document.getElementById('results-card');
const resultsContent = document.getElementById('results-content');
const uploadedImagePreview = document.getElementById('uploaded-image-preview');
const imageTypeText = document.querySelector('#symptom-card .text-muted');

let analysisData = {};

uploadForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    if (!imageInput.files[0]) { alert("Please select an image."); return; }
    spinner.style.display = 'block';
    const formData = new FormData();
    formData.append('image_file', imageInput.files[0]);
    try {
        const response = await fetch('/analyze', { method: 'POST', body: formData });
        if (!response.ok) throw new Error('Server error during image analysis.');
        analysisData = await response.json();
        uploadCard.style.display = 'none';
        uploadedImagePreview.src = analysisData.image_url;
        uploadedImagePreview.style.display = 'block';
        imageTypeText.textContent = analysisData.image_content_type;
        displayQuestions(analysisData);
        symptomCard.style.display = 'block';
    } catch (error) {
        console.error('Fetch Error:', error);
        alert('Could not connect to the server.');
    } finally {
        spinner.style.display = 'none';
    }
});

submitSymptomsBtn.addEventListener('click', async () => {
    // Correctly collect answers based on the unique name generated
    const diseaseAnswers = [];
    document.querySelectorAll('[name^="disease_"]').forEach(radio => {
        if (radio.checked && radio.value === 'yes') {
            diseaseAnswers.push('yes');
        } else if (radio.checked && radio.value === 'no') {
            diseaseAnswers.push('no');
        }
    });

    const insectAnswers = [];
    document.querySelectorAll('[name^="insect_"]').forEach(radio => {
        if (radio.checked && radio.value === 'yes') {
            insectAnswers.push('yes');
        } else if (radio.checked && radio.value === 'no') {
            insectAnswers.push('no');
        }
    });

    const payload = {
        yolo_disease_output: analysisData.yolo_disease_output,
        yolo_insect_output: analysisData.yolo_insect_output,
        disease_answers: diseaseAnswers,
        insect_answers: insectAnswers
    };
    try {
        const response = await fetch('/fuse', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload)
        });
        if (!response.ok) throw new Error('Server error during fusion.');
        const finalResults = await response.json();
        analysisData.results = finalResults;
        symptomCard.style.display = 'none';
        displayResults(finalResults);
        resultsCard.style.display = 'block';
    } catch (error) {
        console.error('Fetch Error:', error);
        alert('Could not get final diagnosis.');
    }
});


resetBtn.addEventListener('click', () => { window.location.reload(); });

function displayQuestions(data) {
    symptomForm.innerHTML = ''; // Clear previous questions
    let questionCount = 0;

    // Helper to create a section title that can be translated
    const createSectionTitle = (key) => {
        const h6 = document.createElement('h6');
        h6.setAttribute('data-translate-key', key);
        h6.innerText = translations[currentLanguage][key];
        return h6;
    };

    if (data.questions && data.questions.disease_questions) {
        const diseaseSection = document.createElement('div');
        diseaseSection.className = 'mb-4';
        diseaseSection.appendChild(createSectionTitle('diseaseSectionTitle'));
        data.questions.disease_questions.forEach(q => diseaseSection.appendChild(createQuestionElement(q, 'disease')));
        symptomForm.appendChild(diseaseSection);
        questionCount += data.questions.disease_questions.length;
    }
    if (data.questions && data.questions.insect_questions) {
        const insectSection = document.createElement('div');
        insectSection.className = 'mb-4';
        insectSection.appendChild(createSectionTitle('insectSectionTitle'));
        data.questions.insect_questions.forEach(q => insectSection.appendChild(createQuestionElement(q, 'insect')));
        symptomForm.appendChild(insectSection);
        questionCount += data.questions.insect_questions.length;
    }
    submitSymptomsBtn.style.display = questionCount > 0 ? 'block' : 'none';
}


function createQuestionElement(q, type) {
    const uniqueId = q.key; // Use the key from the backend (e.g., "dh_q1")
    const formGroup = document.createElement('div');
    formGroup.className = 'mb-3';
    
    // Look up the translated question text using the key
    const questionText = translations[currentLanguage].dynamic_questions[q.key] || q.text;

    formGroup.innerHTML = `
        <label class="form-label small">${questionText}</label>
        <div>
            <input type="radio" class="btn-check" name="${type}_${uniqueId}" id="${uniqueId}-yes" value="yes" autocomplete="off">
            <label class="btn btn-outline-success btn-sm" for="${uniqueId}-yes" data-translate-key="yes">${translations[currentLanguage].yes}</label>
            
            <input type="radio" class="btn-check" name="${type}_${uniqueId}" id="${uniqueId}-no" value="no" autocomplete="off" checked>
            <label class="btn btn-outline-danger btn-sm" for="${uniqueId}-no" data-translate-key="no">${translations[currentLanguage].no}</label>
        </div>
    `;
    return formGroup;
}


// --- ENHANCED displayResults function ---
function displayResults(data) {
    const lang = translations[currentLanguage];
    resultsContent.innerHTML = ''; // Clear previous results

    const getConfidenceClass = (diag) => {
        if (!diag) return "text-muted";
        const lowerDiag = diag.toLowerCase();
        if (lowerDiag.includes("present") || lowerDiag.includes("borer") || lowerDiag.includes("unconfirmed")) {
            return "text-danger fw-bold";
        }
        if (lowerDiag.includes("healthy") || lowerDiag.includes("not present")) {
            return "text-success fw-bold";
        }
        return "text-dark";
    };

    const analysisResult = data.result;
    const analysisType = data.analysis_type;

    let title, finalDiagnosis, visual, symptom, fused, recommendation;

    if (analysisType === 'disease') {
        title = lang.diseaseAnalysisTitle;
        finalDiagnosis = analysisResult.final_diagnosis;
        visual = analysisResult.yolo_output;
        symptom = `Prob. ${analysisResult.tabnet_probability}`;
        fused = `Prob. ${analysisResult.fused_probability}`;
        recommendation = analysisResult.recommendation ? analysisResult.recommendation[currentLanguage] : "No specific recommendation available.";
    } else if (analysisType === 'insect') {
        title = lang.insectAnalysisTitle;
        finalDiagnosis = analysisResult.final_diagnosis;
        visual = analysisResult.yolo_output;
        symptom = analysisResult.tabnet_classification;
        fused = `Prob. ${analysisResult.fused_probability}`;
        recommendation = analysisResult.recommendation ? analysisResult.recommendation[currentLanguage] : "No specific recommendation available.";
    }

    resultsContent.innerHTML = `
        <div class="mb-4">
            <h6>${title}</h6>
            <p class="mb-1"><strong>${lang.finalDiagnosisLabel}</strong> <span class="${getConfidenceClass(finalDiagnosis)}">${finalDiagnosis}</span></p>
            <ul class="list-unstyled small text-muted mb-3">
                <li>${lang.visualDetectionLabel} ${visual}</li>
                <li>${lang.symptomAnalysisLabel} ${symptom}</li>
                <li>${lang.fusedCertaintyLabel} ${fused}</li>
            </ul>
        </div>
        <div>
            <h6 data-translate-key="recommendationTitle">${lang.recommendationTitle}</h6>
            <p class="small">${recommendation}</p>
        </div>
    `;
}


document.addEventListener('DOMContentLoaded', () => { setLanguage('en'); });